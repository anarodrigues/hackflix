{"version":3,"sources":["Catalogue.js","MovieDetails.js","App.js","reportWebVitals.js","index.js"],"names":["Catalogue","useState","movies","setMovies","year","setYear","options","y","Date","getFullYear","push","value","label","useEffect","thisYear","axios","url","params","api_key","language","sort_by","include_adult","include_video","page","primary_release_year","then","res","movieResults","data","results","onChange","event","handleChange","className","map","movie","to","id","alt","src","poster_path","MovieDetails","props","setMovie","movieID","match","original_title","tagline","overview","release_date","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAmEeA,EA3DG,WAId,IAJqB,IAAD,EACQC,mBAAS,IADjB,mBACbC,EADa,KACLC,EADK,OAEIF,qBAFJ,mBAEbG,EAFa,KAEPC,EAFO,KAGdC,EAAU,GACPC,EAAI,KAAMA,IAAK,IAAIC,MAAOC,cAAc,EAAGF,IAChDD,EAAQI,KAAK,CAAEC,MAAOJ,EAAGK,MAAOL,IAGpCM,qBAAU,WACN,IAAMC,EAAWV,EAEjBW,IAAM,CACFC,IAAK,8CACLC,OAAQ,CACJC,QAAS,mCACTC,SAAU,QACVC,QAAS,kBACTC,cAAe,QACfC,cAAe,QACfC,KAAM,EACNC,qBAAsBV,KAE3BW,MAAK,SAACC,GACL,IAAMC,EAAeD,EAAIE,KAAKC,QAE9B1B,EAAUwB,QAEf,CAACvB,IAOJ,OACI,gDAAU,cAAC,IAAD,CAAQE,QAASA,EAASwB,SAAU,SAACC,IAN9B,SAACA,GAClB1B,EAAQ0B,EAAMpB,OAK6CqB,CAAaD,MAEpE,qBAAKE,UAAU,YAAf,SAEK/B,EAAOgC,KAAI,SAACC,GAAD,OACR,qBAAoBF,UAAU,QAA9B,SAOI,cAAC,IAAD,CAAMG,GAAE,iBAAYD,EAAME,IAA1B,SACI,qBAAKC,IAAG,uBAAkBH,EAAME,IAAME,IAAG,yCAAoCJ,EAAMK,kBARjFL,EAAME,aCDrBI,EA3CM,SAACC,GAAW,IAAD,EACFzC,mBAAS,IADP,mBACrBkC,EADqB,KACdQ,EADc,KAG5B9B,qBAAU,WAAO,IACL+B,EAAYF,EAAMG,MAAM5B,OAAxB2B,QAGR7B,IAAM,CACFC,IAAI,sCAAD,OAAwC4B,GAC3C3B,OAAQ,CACJC,QAAS,mCACTC,SAAU,QACVC,QAAS,kBACTC,cAAe,QACfC,cAAe,QACfC,KAAM,OAEXE,MAAK,SAACC,GAELiB,EAASjB,EAAIE,WAElB,CAACc,EAAMG,MAAM5B,SArBY,IAwBpB6B,EAAiEX,EAAjEW,eAAgBC,EAAiDZ,EAAjDY,QAASC,EAAwCb,EAAxCa,SAAUR,EAA8BL,EAA9BK,YAAaS,EAAiBd,EAAjBc,aACxD,OACI,sBAAKhB,UAAU,SAAf,UACI,sBAAKA,UAAU,cAAf,UACI,6BAAKa,IACL,+CAAkBG,KAClB,6BAAKF,IACL,4BAAIC,OAER,qBAAKf,UAAU,QAAf,SACMO,EACE,qBAAKD,IAAG,yCAAoCC,GAAeF,IAAG,2BAAsBQ,KAClF,W,OCTPI,EAtBH,WAIV,OACE,cAAC,IAAD,CAAQC,SAAUC,YAAlB,SACA,sBAAKnB,UAAU,MAAf,UACI,iCACE,cAAC,IAAD,CAAMG,GAAE,IAAR,SACE,8CAMJ,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAIC,UAAWvD,IACjC,cAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,kBAAkBC,UAAWd,UCbxCe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8a6009f5.chunk.js","sourcesContent":["// Catalogue.js\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\n\n// import a Link component\nimport { Link } from 'react-router-dom';\n\nconst Catalogue = () => {\n    const [movies, setMovies] = useState([]);\n    const [year, setYear] = useState();\n    const options = [];\n    for (let y = 1941; y <= new Date().getFullYear()+1; y++){\n        options.push({ value: y, label: y });\n    }\n\n    useEffect(() => {\n        const thisYear = year;\n        // After the component has been added to the DOM make our API call...\n        axios({\n            url: 'https://api.themoviedb.org/3/discover/movie',\n            params: {\n                api_key: 'f012df5d63927931e82fe659a8aaa3ac',\n                language: 'en-US',\n                sort_by: 'popularity.desc',\n                include_adult: 'false',\n                include_video: 'false',\n                page: 1,\n                primary_release_year: thisYear,\n            },\n        }).then((res) => {\n            const movieResults = res.data.results;\n            // Store the API results to the \"movies\" state value...\n            setMovies(movieResults);\n        })\n    }, [year]);\n\n    const handleChange = (event) => {\n        setYear(event.value);\n    }\n\n\n    return (\n        <>        <Select options={options} onChange={(event) => { handleChange(event) }} />\n\n            <div className=\"catalogue\">\n\n                {movies.map((movie) => (\n                    <div key={movie.id} className=\"movie\">\n                        {\n                            // wrap the Link component around each Catalogue image and \n                            // set the \"to\" attribute to our route's URL path with movie ID stored in our API data \n                        }\n\n\n                        <Link to={`/movie/${movie.id}`}>\n                            <img alt={`movie detail ${movie.id}`} src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                            />\n                        </Link>\n                    </div>\n                )\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default Catalogue;","// MovieDetails.js\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst MovieDetails = (props) => {\n    const [movie, setMovie] = useState({});\n\n    useEffect(() => {\n        const { movieID } = props.match.params;\n        //console.log(props.match.params);\n\n        axios({\n            url: `https://api.themoviedb.org/3/movie/${movieID}`,\n            params: {\n                api_key: 'f012df5d63927931e82fe659a8aaa3ac',\n                language: 'en-US',\n                sort_by: 'popularity.desc',\n                include_adult: 'false',\n                include_video: 'false',\n                page: '1'\n            },\n        }).then((res) => {\n            //console.log(res.data);\n            setMovie(res.data);\n        })\n    }, [props.match.params]);\n\n\n    const { original_title, tagline, overview, poster_path, release_date } = movie;\n    return (\n        <div className=\"poster\">\n            <div className=\"description\">\n                <h1>{original_title}</h1>\n                <p>Release date: {release_date}</p>\n                <h2>{tagline}</h2>\n                <p>{overview}</p>\n            </div>\n            <div className=\"image\">\n                {(poster_path) ?\n                    <img src={`http://image.tmdb.org/t/p/w500/${poster_path}`} alt={`Movie poster for ${original_title}`} />\n                    : null\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default MovieDetails;","import './App.css';\nimport Catalogue from './Catalogue';\nimport MovieDetails from './MovieDetails';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import a Link component\nimport { Link } from 'react-router-dom';\n\n\n\nconst App = () => {\n  \n\n  \n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n    <div className=\"App\">\n        <header>\n          <Link to={`/`}>\n            <h1>Hackflix</h1>\n          </Link>\n            \n          \n\n        </header>\n        <Route exact path=\"/\" component={Catalogue} />\n        <Route exact path=\"/movie/:movieID\" component={MovieDetails} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}